Step: build-step-credential-initializer:

{"level":"warn","ts":1550663211.4589455,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/test\" is not a valid GitHub commit ID"}
{"level":"info","ts":1550663211.4696279,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}
Step: build-step-git-source-0:

{"level":"warn","ts":1550663214.1273193,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/test\" is not a valid GitHub commit ID"}
{"level":"info","ts":1550663214.9367614,"logger":"fallback-logger","caller":"git-init/main.go:92","msg":"Successfully cloned \"https://github.com/amuniz-org/amuniz-golang.git\" @ \"master\" in path \"/workspace\""}
Step: build-step-jenkins:

Picked up _JAVA_OPTIONS: -Xmx400m
Started
Running in Durability level: PERFORMANCE_OPTIMIZED
  21.689 [id=24]	WARNING	i.f.k.c.i.VersionUsageUtils#alert: The client is using resource type 'customresourcedefinitions' with unstable version 'v1beta1'
[Pipeline] node
Running on Jenkins in /tmp/jenkinsTests.tmp/jenkins2866227762822465130test/workspace/job
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
[Pipeline] }
[Pipeline] // stage
[Pipeline] withCredentials
[Pipeline] {
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (CI Build and push snapshot)
Stage "CI Build and push snapshot" skipped due to when conditional
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Build Release)
[Pipeline] dir
Running in /home/jenkins/go/src/github.com/amuniz-org/amuniz-golang
[Pipeline] {
[Pipeline] git
Cloning the remote Git repository
Cloning repository https://github.com/amuniz-org/amuniz-golang.git
 > git init /home/jenkins/go/src/github.com/amuniz-org/amuniz-golang # timeout=10
Fetching upstream changes from https://github.com/amuniz-org/amuniz-golang.git
 > git --version # timeout=10
 > git fetch --tags --progress https://github.com/amuniz-org/amuniz-golang.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/amuniz-org/amuniz-golang.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/amuniz-org/amuniz-golang.git # timeout=10
Fetching upstream changes from https://github.com/amuniz-org/amuniz-golang.git
 > git fetch --tags --progress https://github.com/amuniz-org/amuniz-golang.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
 > git rev-parse refs/remotes/origin/origin/master^{commit} # timeout=10
Checking out Revision f73919033ae87d439e0dcf9d1296f0ad597a3187 (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f f73919033ae87d439e0dcf9d1296f0ad597a3187
 > git branch -a -v --no-abbrev # timeout=10
 > git checkout -b master f73919033ae87d439e0dcf9d1296f0ad597a3187
Commit message: "Draft create"
First time build. Skipping changelog.
[Pipeline] sh
+ jx-release-version
+ echo 0.0.4
[Pipeline] sh
+ cat VERSION
+ jx step tag --version 0.0.4
Tag v0.0.4 created and pushed to remote origin
[Pipeline] sh
+ make build
CGO_ENABLED=0 GO15VENDOREXPERIMENT=1 go build -ldflags '' -o bin/amuniz-golang main.go
[Pipeline] sh
+ cat VERSION
+ export VERSION=0.0.4
+ skaffold build -f skaffold.yaml
time="2019-02-20T11:50:05Z" level=warning msg="config version (skaffold/v1alpha2) out of date: upgrading to latest (skaffold/v1beta3)"
Starting build...
Building [changeme]...
Sending build context to Docker daemon  525.8kBSending build context to Docker daemon  5.539MBSending build context to Docker daemon  6.502MB
Step 1/4 : FROM scratch
 ---> 
Step 2/4 : EXPOSE 8080
 ---> Running in 3858968fa293
 ---> b4f07b4cda4e
Step 3/4 : ENTRYPOINT /amuniz-golang
 ---> Running in 088327c3ddfe
 ---> 80ee0689b8ab
Step 4/4 : COPY ./bin/ /
 ---> a879507ebbb4
Successfully built a879507ebbb4
The push refers to a repository [10.27.243.18:5000/amuniz-org/amuniz-golang]
6dc1512404e1: Preparing
6dc1512404e1: Pushed
0.0.4: digest: sha256:877839c1e5da46d2585f21b573cb4539c453d933b7ba17a67b6af2da3ee9f601 size: 528
Build complete in 1.866936587s
Starting test...
Test complete in 5.128Âµs
changeme -> 10.27.243.18:5000/amuniz-org/amuniz-golang:0.0.4
There is a new version (0.23.0) of skaffold available. Download it at https://storage.googleapis.com/skaffold/releases/latest/skaffold-linux-amd64

[Pipeline] sh
+ cat VERSION
+ jx step post build --image 10.27.243.18:5000/amuniz-org/amuniz-golang:0.0.4
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Promote to Environments)
[Pipeline] dir
Running in /home/jenkins/go/src/github.com/amuniz-org/amuniz-golang/charts/amuniz-golang
[Pipeline] {
[Pipeline] sh
+ cat ../../VERSION
+ jx step changelog --version v0.0.4
Using batch mode as inside a pipeline
Generating change log from git ref f73919033ae87d439e0dcf9d1296f0ad597a3187 => 0eec113ce1123839a2e9dc569b1981a74cd7d172
Failed to enrich commits with issues: User.jenkins.io "" is invalid: metadata.name: Required value: name or generateName is required
Failed to enrich commits with issues: User.jenkins.io "" is invalid: metadata.name: Required value: name or generateName is required
Finding issues in commit messages using git format
No release found for amuniz-org/amuniz-golang and tag v0.0.4 so creating a new release
Updated the release information at https://github.com/amuniz-org/amuniz-golang/releases/tag/v0.0.4
generated: /home/jenkins/go/src/github.com/amuniz-org/amuniz-golang/charts/amuniz-golang/templates/release.yaml
Created Release amuniz-golang-0-0-4 resource in namespace jx
Updating PipelineActivity amuniz-org-amuniz-golang-master-1 with version 0.0.4
Updated PipelineActivities amuniz-org-amuniz-golang-master-1 with release notes URL: https://github.com/amuniz-org/amuniz-golang/releases/tag/v0.0.4
[Pipeline] sh
+ jx step helm release
No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080
Adding missing Helm repo: jenkins-x http://chartmuseum.jenkins-x.io
Successfully added Helm repository jenkins-x.
Adding missing Helm repo: releases http://jenkins-x-chartmuseum:8080
Successfully added Helm repository releases.
No $CHART_REPOSITORY defined so using the default value of: http://jenkins-x-chartmuseum:8080
Uploading chart file amuniz-golang-0.0.4.tgz to http://jenkins-x-chartmuseum:8080/api/charts
Received 201 response: {"saved":true}
[Pipeline] sh
+ cat ../../VERSION
+ jx promote -b --all-auto --timeout 1h --version 0.0.4
prow based install so skip waiting for the merge of Pull Requests to go green as currently there is an issue with gettingstatuses from the PR, see https://github.com/jenkins-x/jx/issues/2410
Promoting app amuniz-golang version 0.0.4 to namespace jx-staging
Created Pull Request: https://github.com/amuniz-org/environment-amuniz-dev-sandbox-staging/pull/1

Pull Request https://github.com/amuniz-org/environment-amuniz-dev-sandbox-staging/pull/1 is merged at sha 9ff110d0dfb525ce61cf76b0374b30af47ad92f8
Pull Request merged but we are not waiting for the update pipeline to complete!
Could not find the service URL in namespace jx-staging for names amuniz-golang, jx-amuniz-golang, jx-staging-amuniz-golang
[Pipeline] }
[Pipeline] // dir
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS
